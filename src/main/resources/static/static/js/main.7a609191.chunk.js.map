{"version":3,"sources":["Header/header.css","Footer/Footer.css","Body/Body.css","serviceWorker.js","Images/Images.js","Header/header.js","Footer/Footer.js","Body/Body.js","HomePage/homePage.js","index.js"],"names":["module","exports","header","logo","footer","guanggao1","guanggao2","no","gundong","fennei1","fennei2","Boolean","window","location","hostname","match","React","Component","HeaderCss","require","Defaultheader","react_default","a","createElement","className","htmlFor","FooterCss","Footer","BodyCss","Body","HomePage","header_Defaultheader","Body_Body","Footer_Footer","IndexPage","console","log","homePage_HomePage","ReactDOM","render","src_IndexPage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIACAA,EAAAC,QAAA,CAAkBC,OAAA,0BAAAC,KAAA,4CCAlBH,EAAAC,QAAA,CAAkBG,OAAA,4CCAlBJ,EAAAC,QAAA,CAAkBI,UAAA,0BAAAC,UAAA,0BAAAC,GAAA,0BAAAC,QAAA,0BAAAC,QAAA,wBAAAC,QAAA,4ICWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCd8BC,IAAMC,cCFtCC,EAAYC,EAAQ,IAEHC,mLAkBb,OACIC,EAAAC,EAAAC,cAAA,WAEKF,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAUf,MACvBkB,EAAAC,EAAAC,cAAA,SAEyB,yCAI7BF,EAAAC,EAAAC,cAAA,OAAKC,UAAWN,EAAUhB,QACtBmB,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,qCA7BuBT,IAAMC,WCF7CS,EAAWP,EAAQ,IAEFQ,mLAEb,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAWE,EAAUtB,QACtBiB,EAAAC,EAAAC,cAAA,6CAJoBP,IAAMC,WCFtCW,EAAST,EAAQ,IAEAU,mLAGb,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQC,MAEpBR,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQvB,WACpBgB,EAAAC,EAAAC,cAAA,2BAGJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQtB,WACpBe,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQrB,IACpBc,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQpB,SACpBa,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQnB,SACpBY,EAAAC,EAAAC,cAAA,iFAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQlB,SACpBW,EAAAC,EAAAC,cAAA,iFAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQnB,SACpBY,EAAAC,EAAAC,cAAA,iFAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQlB,SACpBW,EAAAC,EAAAC,cAAA,iFAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAWI,EAAQnB,SACpBY,EAAAC,EAAAC,cAAA,kFAGRF,EAAAC,EAAAC,cAAA,WAMIF,EAAAC,EAAAC,cAAA,oIArCUP,IAAMC,WCKnBa,mLAEb,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACQ,EAAD,MACAV,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAACU,EAAD,cANsBjB,IAAMC,WCFtCiB,+LAEEC,QAAQC,IAAI,8EAGZD,QAAQC,IAAI,kEAIZ,OACIf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAD,cAXQrB,IAAMC,WAgB9BqB,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAAaC,SAASC,eAAe,SN0G/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.7a609191.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_2PZ3YliELk2P-c0LL-lLff\",\"logo\":\"_3gX7TUC2L5tECXKvKFn2Rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"_3QL6WkzwiCvkZODRy0XBXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"guanggao1\":\"_1yXgts8kLO9KgnXY8R0a9k\",\"guanggao2\":\"_2M_M13nxhUfYbG2vqiixhd\",\"no\":\"_2pziHlDL8UjR-Z6JcnGuG3\",\"gundong\":\"_2nrz1c9_W3fyuDD09ASjQe\",\"fennei1\":\"QzgtQ6sUdoZGvQfsrJpp2\",\"fennei2\":\"_7Wxy2LnFtZAbVV-3dvXcb\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\n// var ImagesCss = require('./Images.css');\r\n\r\nexport default class Images extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p>用户名：<input type=\"text\" onChange={this.props.headerNameChage}  /></p>\r\n                <input type='button' value=\"登陆\"/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Images from './../Images/Images'\r\nvar HeaderCss = require('./header.css')\r\n// var userName=\"\"\r\nexport default class Defaultheader extends React.Component{\r\n    // constructor(){\r\n    //     super();//调用基类的所有初始化的值\r\n    //     this.state={\r\n    //         userName : \"\"\r\n    //     };\r\n    // }\r\n\r\n    // Names(){\r\n\r\n    // }\r\n\r\n    // headerNameChage(event){\r\n    //     this.setState({userName : event.target.value});\r\n    // }\r\n\r\n    render(){\r\n        var userName =\"\"\r\n        return(\r\n            <div>\r\n                {/* <p>{this.props.userName}</p> */}\r\n                 <div className={HeaderCss.logo}>\r\n                    <p>\r\n                        {\r\n                            userName ==='' ? '用户没有登陆' : '用户：'+userName+'欢迎你'\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className={HeaderCss.header}>\r\n                    <label htmlFor=\"title\">欢迎页面</label>\r\n                </div>\r\n                {/* <Images headerNameChage ={this.headerNameChage.bind(this)}/> */}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nvar FooterCss =require('./Footer.css');\r\n\r\nexport default class Footer extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className={FooterCss.footer}>\r\n                <p>脚底版权</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\n\r\nvar BodyCss =require('./Body.css');\r\n\r\nexport default class Body extends React.Component{\r\n   \r\n    render(){\r\n        return(\r\n            <div className={BodyCss.Body}>\r\n\r\n                <div className={BodyCss.guanggao1}>\r\n                    <p>广告1</p>\r\n                </div>\r\n\r\n                <div className={BodyCss.guanggao2}>\r\n                    <p>广告2</p>\r\n                </div>\r\n                <div className={BodyCss.no}>\r\n                    <div className={BodyCss.gundong}>\r\n                        <div className={BodyCss.fennei1}>\r\n                            <p>第1个产品分类的右拉菜单</p>\r\n                        </div>\r\n                        <div className={BodyCss.fennei2}>\r\n                            <p>第2个产品分类的右拉菜单</p>\r\n                        </div>\r\n                        <div className={BodyCss.fennei1}>\r\n                            <p>第3个产品分类的右拉菜单</p>\r\n                        </div>\r\n                        <div className={BodyCss.fennei2}>\r\n                            <p>第4个产品分类的右拉菜单</p>\r\n                        </div>\r\n                        <div className={BodyCss.fennei1}>\r\n                            <p>第5个产品分类的右拉菜单</p>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {/* {\r\n                            setTimeout(() => {\r\n                            \r\n                            }, 1000)\r\n                        } */}\r\n                        <p>随机推送已有产品照片+跳转链接（滚动）</p>\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Defaultheader from './../Header/header';\r\n\r\nimport Defaultfooter from './../Footer/Footer';\r\n\r\nimport Defaultbody from './../Body/Body';\r\n\r\nimport Defaultimages from './../Images/Images';\r\n\r\nexport default class HomePage extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Defaultheader/>\r\n                <Defaultbody/>   \r\n                <Defaultfooter/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';//import  导入\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport HomePage from './HomePage/homePage'\n\nclass IndexPage extends React.Component{\n    componentWillMount(){\n        console.log('IndexPage - componentWillMount');\n    }\n    componentDidMount(){\n        console.log('IndexPage - componentDidMount');\n    }\n    render(){\n\n        return(\n            <div>\n                <HomePage/>\n            </div>\n        )\n    }\n}\nReactDOM.render(<IndexPage/>,document.getElementById('root'))\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}